#!/bin/bash -e

help()
{
    {
        name=${0##*/}
        cat << EOF
Usage: $name [-d] [get|store|erase]

-p: pass executable path
-d: base folder name(default: git)
EOF
    } 1>&2
    exit 1
}

pass_executable=pass
base=git
declare -A arr

req () {
    while read line; do
        if [ "$line" = "" ]; then
            break
        fi
        key=$(echo $line | awk -F= '{print $1}')
        value=$(echo $line | awk -F= '{print $2}')
        arr[$key]=$value
    done
    if [ "${arr["host"]}" = "" ]; then
        echo "requires host" >&2
        exit 1
    fi
}

get() {
    local contents="$(${pass_executable} ${base}/${arr[host]})"
    if [[ 0 -eq $? ]]; then
        echo "${contents}"
    else
        exit 1
    fi
}

store () {
    if [ "${arr[username]}" = "" -o "${arr[password]}" = "" ]; then
        echo "requires username, password" >&2
        exit 1
    fi
    local data=$(printf "username=${arr[username]}\npassword=${arr[password]}")
    local contents="$(${pass_executable} ${base}/${arr[host]})"
    local exists=$?
    if [[ 0 -eq ${exists} ]]; then
        if [[ "${data}" = "${contents}" ]]; then
            exit 1
        fi
    fi
    echo -en "${data}" | ${pass_executable} insert --mutiline "${base}/${arr[host]}"
}

erase () {
    ${pass_executable} rm --force "${base}/${arr[host]}"
}

args=$(getopt -u -o p:d:h --long help -- $*)
set -- $args
while [ $# -gt 0 ]; do 
    case $1 in 
    --) shift; break ;;
    -p) shift; pass_executable="$1" ;;
    -d) shift; base="$1" ;;
    -h|--help) help ;;
    esac
    shift
done

g=

if [ $# -eq 0 ]; then
    echo "requires command">&2
    exit 1
fi

case $1 in
    get|store|erase) g=$1 ;;
                  *) echo "unknown command: $1">&2; exit 1 ;;
esac

req
$g

