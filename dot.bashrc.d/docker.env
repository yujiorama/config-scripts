# vi: ai et ts=4 sw=4 sts=4 expandtab fs=shell

if (docker-machine ls --quiet --timeout 1 --filter state=Running | grep -i running) >/dev/null 2>&1; then
    echo "docker-machine: running"
    docker-machine env > ${HOME}/.docker_env
elif (minikube status --profile minikube --format '{{.Host}}' | grep -i running) >/dev/null 2>&1; then
    echo "minikube: running"
    minikube docker-env --profile minikube > ${HOME}/.docker_env
    echo "export DOCKER_BUILDKIT=1" >> ${HOME}/.docker_env
elif [[ -e ${HOME}/.lpc-2167/env ]]; then
    echo "LPC-2167: running"
    /bin/cat ${HOME}/.lpc-2167/env > ${HOME}/.docker_env
else
    rm -f ${HOME}/.docker_env; touch ${HOME}/.docker_env
fi

if [[ -s ${HOME}/.docker_env ]]; then
    docker_host_=$(grep DOCKER_HOST ${HOME}/.docker_env | cut -d ' ' -f 2 | cut -d '=' -f 2)
    hostpart_=${docker_host_##tcp://}
    hostpart_=${hostpart_%%:*}
    portpart_=${docker_host_##*:}
    if online ${hostpart_} ${portpart_}; then
        source <( /bin/cat ${HOME}/.docker_env )
        docker_version=$(docker version --format '{{.Server.Version}}' | cut -c1-5)
        echo "Server.Version ${docker_version}"
        if [[ "18.09" < "${docker_version}" ]]; then
            echo "export DOCKER_BUILDKIT=1" >> ${HOME}/.docker_env
        fi
        unset docker_version
    fi
fi

case ${OS:-Linux} in
    Windows*) export COMPOSE_CONVERT_WINDOWS_PATHS=1 ;;
    *)        export COMPOSE_CONVERT_WINDOWS_PATHS=0 ;;
esac

